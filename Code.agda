{-# OPTIONS --type-in-type #-}
module Code where

record ­ЮЪЎ : Set where
  constructor *

module РЅА where
  data _T_ {A} x : A Рєњ Set where
    idn : x T x

module ├Ќ where
  infixr 1 _T_
  record _T_ A B : Set where
    constructor _,_
    field
      ¤ђРѓђ : A
      ¤ђРѓЂ : B
open ├Ќ using (_,_)

module РЄњ where
  infixr 0 _T_
  _T_ : (A B : Set) Рєњ Set
  A T B = A Рєњ B

  ! : Рѕђ {A B} Рєњ B Рєњ (A T B)
  ! b _ = b

  idn : Рѕђ {A} Рєњ A T A
  idn x = x

  _Рѕў_
    : Рѕђ {A B C}
    Рєњ (g : B T C)
    Рєњ (f : A T B)
    Рєњ A T C
  (g Рѕў f) x = g (f x)

record [_]Рѓђрхњрхќ ­Юњъ : Set where
  constructor ╬╣Рѓђрхњрхќ
  field
    ¤ђРѓђрхњрхќ : ­Юњъ
open [_]Рѓђрхњрхќ

Hom : Set Рєњ Set
Hom ­Юњъ = [ ­Юњъ ]Рѓђрхњрхќ Рєњ ­Юњъ Рєњ Set

Рёў : Set Рєњ Set
Рёў ­Юњъ = ­Юњъ Рєњ Set

[_]РѓЂрхњрхќ
  : Рѕђ {­Юњъ}
  Рєњ Hom ­Юњъ
  Рєњ Hom [ ­Юњъ ]Рѓђрхњрхќ
[ ­Юњъ[_,_] ]РѓЂрхњрхќ (╬╣Рѓђрхњрхќ (╬╣Рѓђрхњрхќ a)) b = ­Юњъ[ b , a ]

yo
  : Рѕђ {­Юњъ}
  Рєњ (­Юњъ[_,_] : Hom ­Юњъ)
  Рєњ (b : ­Юњъ)
  Рєњ Рёў [ ­Юњъ ]Рѓђрхњрхќ
yo ­Юњъ[_,_] b a = ­Юњъ[ a , b ]

co
  : Рѕђ {­Юњъ}
  Рєњ (­Юњъ[_,_] : Hom ­Юњъ)
  Рєњ (a : [ ­Юњъ ]Рѓђрхњрхќ)
  Рєњ Рёў ­Юњъ
co ­Юњъ[_,_] = ­Юњъ[_,_]

Set[_,_] : Hom Set
Set[_,_] (╬╣Рѓђрхњрхќ A) B = A РЄњ.T B

РѕФРєЊ : (­Юњъ : Set) (╬е : Hom ­Юњъ) Рєњ Set
РѕФРєЊ ­Юњъ ╬е = Рѕђ c Рєњ ╬е (╬╣Рѓђрхњрхќ c) c

record РѕФРєЉ (­Юњъ : Set) (╬е : Hom ­Юњъ) : Set where
  constructor sРєЉ
  field
    ¤ђРѓђ : ­Юњъ
    ¤ђРѓЂ : ╬е (╬╣Рѓђрхњрхќ ¤ђРѓђ) ¤ђРѓђ

Lan
  : Рѕђ {­Юњъ ­ЮњЪ ­Юњ▒}
  Рєњ (­ЮњЪ[_,_] : Hom ­ЮњЪ)
  Рєњ (_РіЌ_ : [ ­Юњ▒ ]Рѓђрхњрхќ Рєњ Set Рєњ Set)
  Рєњ (J : ­Юњъ Рєњ ­ЮњЪ)
  Рєњ (F : ­Юњъ Рєњ ­Юњ▒)
  Рєњ Рёў ­ЮњЪ
Lan {­Юњъ = ­Юњъ}{­ЮњЪ = ­ЮњЪ} ­ЮњЪ[_,_] _РіЌ_ J F d = РѕФРєЉ ­Юњъ ╬╗ {
    (╬╣Рѓђрхњрхќ x) y Рєњ ╬╣Рѓђрхњрхќ (F x) РіЌ ­ЮњЪ[ ╬╣Рѓђрхњрхќ (J y) , d ]
  }

Ran
  : Рѕђ {­Юњъ ­ЮњЪ ­Юњ▒}
  Рєњ (­ЮњЪ[_,_] : Hom ­ЮњЪ)
  Рєњ (_РІћ_ : Set Рєњ ­Юњ▒ Рєњ Set)
  Рєњ (J : ­Юњъ Рєњ ­ЮњЪ)
  Рєњ (F : ­Юњъ Рєњ ­Юњ▒)
  Рєњ Рёў ­ЮњЪ
Ran {­Юњъ = ­Юњъ} {­ЮњЪ = ­ЮњЪ} ­ЮњЪ[_,_] _РІћ_ J F d = РѕФРєЊ ­Юњъ ╬╗ {
    (╬╣Рѓђрхњрхќ x) y Рєњ ­ЮњЪ[ ╬╣Рѓђрхњрхќ d , J x ] РІћ F y
  }

╬ћ[_] : Рѕђ {­Юњъ ­ЮњЦ} Рєњ ­Юњъ Рєњ (­ЮњЦ Рєњ ­Юњъ)
╬ћ[ c ] j = c

kрхњрхќ : Рѕђ {A B} (f : A Рєњ B) Рєњ A Рєњ [ B ]Рѓђрхњрхќ
kрхњрхќ f x = ╬╣Рѓђрхњрхќ (f x)

Рёў_[_,_] : (A : Set) Рєњ Hom (Рёў A)
Рёў A [ ╬╣Рѓђрхњрхќ ¤є , ¤ѕ ] = Рѕђ {x : A} Рєњ ¤є x Рєњ ¤ѕ x

Setрхњрхќ[_,_] : Set Рєњ [ Set ]Рѓђрхњрхќ Рєњ Set
Setрхњрхќ[ A , ╬╣Рѓђрхњрхќ B ] = Set[ ╬╣Рѓђрхњрхќ A , B ]

module _
  {W} (W[_,_] : Hom W) (Ріц : W)
  {╬Е} (╬Е[_,_] : Hom ╬Е)
  where

  ­ЮћЇ : Set
  ­ЮћЇ = Рёў [ W ]Рѓђрхњрхќ

  ­ЮћЇ[_,_] : Hom ­ЮћЇ
  ­ЮћЇ[ ¤є , ¤ѕ ] = Рёў [ W ]Рѓђрхњрхќ [ ¤є , ¤ѕ ]

  LimРєљ : Рѕђ {­Юњъ} (­ЮњЦ : Рёў ­Юњъ) Рєњ ­ЮћЇ
  LimРєљ ­ЮњЦ (╬╣Рѓђрхњрхќ w) = Ran W[_,_] Setрхњрхќ[_,_] ╬ћ[ Ріц ] (kрхњрхќ ­ЮњЦ) w

  кЏРєњ : Рѕђ {A B C} Рєњ (A ├Ќ.T B Рєњ C) Рєњ (A Рєњ B РЄњ.T C)
  кЏРєњ f x y = f (x , y)

  кЏРєљ : Рѕђ {A B C} Рєњ (A Рєњ B РЄњ.T C) Рєњ (A ├Ќ.T B Рєњ C)
  кЏРєљ f (x , y) = f x y

  РѕБ╬Е : (­ЮњЦ : ╬Е Рєњ ­ЮћЇ) Рєњ ­ЮћЇ
  РѕБ╬Е ­ЮњЦ (╬╣Рѓђрхњрхќ w) = ­ЮћЇ[ ╬╣Рѓђрхњрхќ (yo W[_,_] w) , LimРєљ (кЏРєљ ­ЮњЦ) ]
